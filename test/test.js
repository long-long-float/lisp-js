// Generated by CoffeeScript 1.7.1
(function() {
  describe('Lisp', function() {
    return describe('parser', function() {
      var p;
      p = null;
      beforeEach(function(done) {
        p = new Parser;
        return done();
      });
      it('should not thrown', function() {
        expect(function() {
          return p.parse('(1 "hoge" nil t \'(1 2 3))');
        }).not.to["throw"]();
        expect(function() {
          return p.parse('(cons 0 \'(1 2 3))');
        }).not.to["throw"]();
        expect(function() {
          return p.parse('(cond ((eq 1 1) "hoge") ((eq 2 2) "piyo"))');
        }).not.to["throw"]();
        expect(function() {
          return p.parse('(quote (1 2 3))');
        }).not.to["throw"]();
        return expect(function() {
          return p.parse('(lambda (x y) (+ x y))');
        }).not.to["throw"]();
      });
      return it('should thrown', function() {
        return expect(function() {
          return p.parse('(').to["throw"]();
        });
      });
    });
  });

}).call(this);
